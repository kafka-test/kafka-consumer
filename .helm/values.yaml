elCicdChart:
  elcicdDefs:
    ODD: odd
    EVEN: even
    KAFKA_POC: kafka-poc
    KAFKA_TOPIC_ODD: ${ODD}-topic
    KAFKA_TOPIC_EVEN: ${EVEN}-topic
    CONSUMER_ODD: ${KAFKA_TOPIC_ODD}-consumer
    CONSUMER_EVEN: ${KAFKA_TOPIC_EVEN}-consumer
    APP_NAMES:
    - ${CONSUMER_ODD}
    - ${CONSUMER_EVEN}
    CPU_UTILIZATION: 90
    RESOURCE_QUOTA:
      limits:
        cpu: 1
        memory: 1500Mi
  elcicdDefs-${CONSUMER_ODD}:
    KAFKA_TOPIC: ${KAFKA_TOPIC_ODD}
    KAFKA_GROUP: ${ODD}-group
  elcicdDefs-${CONSUMER_EVEN}:
    KAFKA_TOPIC: ${KAFKA_TOPIC_EVEN}
    KAFKA_GROUP: ${EVEN}-group

  templates:
  - templateName: deployment
    appNames: ${APP_NAMES}
    replicas: 2
    annotations:
        vault.hashicorp.com/auth-path: auth/kubernetes
        vault.hashicorp.com/agent-inject: true
        vault.hashicorp.com/role: ${RELEASE_NAMESPACE}-${APP_NAME}
        vault.hashicorp.com/agent-inject-secret-ca.crt: secret/data/${RELEASE_NAMESPACE}/${APP_NAME}
        vault.hashicorp.com/agent-inject-template-ca.crt: |-
          {{- with secret "secret/data/${RELEASE_NAMESPACE}/${APP_NAME}" -}}
            {{- .Data.data.cacrt }}
          {{- end -}}
    serviceAccountName: ${APP_NAME}
    env:
    - name: KAFKA_SERVER
      valueFrom:
        configMapKeyRef:
          name: ${APP_NAME}
          key: KAFKA_SERVER
    - name: KAFKA_GROUP
      valueFrom:
        configMapKeyRef:
          name: ${APP_NAME}
          key: KAFKA_GROUP
    - name: KAFKA_TOPIC
      valueFrom:
        configMapKeyRef:
          name: ${APP_NAME}
          key: KAFKA_TOPIC
    resources: ${RESOURCE_QUOTA}

  - templateName: configMap
    appNames: ${APP_NAMES}
    elcicdDefs-dev:
      KAFKA_SERVER: dev-kafka-cluster-kafka-ext-bootstrap-openshift-operators.apps-crc.testing:443
    elcicdDefs-stg:
      KAFKA_SERVER: stg-kafka-cluster-kafka-ext-bootstrap-openshift-operators.apps-crc.testing:443
    data:
      KAFKA_SERVER: ${KAFKA_SERVER}
      KAFKA_GROUP: ${KAFKA_GROUP}
      KAFKA_TOPIC: ${KAFKA_TOPIC}
      
  - templateName: serviceAccount
    appNames: ${APP_NAMES}
    
  # - templateName: horizontalPodAutoscaler
  #   appNames: ${APP_NAMES}
  #   elcicdDefs-${CONSUMER_ODD}:
  #     MIN_REPLICAS: 2
  #     MAX_REPLICAS: 3
  #   elcicdDefs-${CONSUMER_EVEN}:
  #     MIN_REPLICAS: 3
  #     MAX_REPLICAS: 4
  #   elcicdDefs-${CONSUMER_ODD}-prod:
  #     CPU_UTILIZATION: 80
  #     MAX_REPLICAS: 5
  #   elcicdDefs-${CONSUMER_EVEN}-prod:
  #     CPU_UTILIZATION: 70
  #     MAX_REPLICAS: 7
  #   minReplicas: ${MIN_REPLICAS}
  #   maxReplicas: ${MAX_REPLICAS}
  #   metrics:
  #   - type: resource
  #     name: cpu
  #     target:
  #       type: Utilization
  #       averageUtilization: ${CPU_UTILIZATION}

    

