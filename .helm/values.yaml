elCicdChart:
  elcicdDefs:
    KAFKA_SERVER: kafka-cluster-kafka-rtlistener-bootstrap-openshift-operators.apps-crc.testing:443
    KAFKA_GROUP: 'odd-even-group'
    KAFKA_TOPIC_1: 'odd-topic'
    KAFKA_TOPIC_2: 'even-topic'

  templates:
  - templateName: deployment
    appNames:
    - ${KAFKA_TOPIC_1}-consumer
    - ${KAFKA_TOPIC_2}-consumer
    elcicdDefs-${KAFKA_TOPIC_1}-consumer:
      KAFKA_TOPIC: ${KAFKA_TOPIC_1}
    elcicdDefs-${KAFKA_TOPIC_2}-consumer:
      KAFKA_TOPIC: ${KAFKA_TOPIC_2}
    annotations:
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: 'kafka-poc'
        vault.hashicorp.com/agent-inject-secret-ca.crt: 'secret/data/kafka-poc/cert'
        vault.hashicorp.com/agent-inject-template-ca.crt: |-
          {{- with secret "secret/data/kafka-poc/cert" -}}
          {{- .Data.data.cacrt }}
          {{- end -}}
    serviceAccountName: kafka-poc
    env:
    - name: KAFKA_SERVER
      valueFrom:
        configMapKeyRef:
          name: kafka-config-${KAFKA_TOPIC}
          key: KAFKA_SERVER
    - name: KAFKA_GROUP
      valueFrom:
        configMapKeyRef:
          name: kafka-config-${KAFKA_TOPIC}
          key: KAFKA_GROUP
    - name: KAFKA_TOPIC
      valueFrom:
        configMapKeyRef:
          name: kafka-config-${KAFKA_TOPIC}
          key: KAFKA_TOPIC

  - templateName: configMap
    appNames:
    - kafka-config-${KAFKA_TOPIC_1}
    - kafka-config-${KAFKA_TOPIC_2}
    elcicdDefs-kafka-config-${KAFKA_TOPIC_1}:
      KAFKA_TOPIC: ${KAFKA_TOPIC_1}
    elcicdDefs-kafka-config-${KAFKA_TOPIC_2}:
      KAFKA_TOPIC: ${KAFKA_TOPIC_2}
    data:
      KAFKA_SERVER: ${KAFKA_SERVER}
      KAFKA_GROUP: ${KAFKA_GROUP}
      KAFKA_TOPIC: ${KAFKA_TOPIC}
      
  - templateName: serviceAccount
    appName: kafka-poc

